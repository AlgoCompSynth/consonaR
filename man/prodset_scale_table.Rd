% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/consonaR.R
\name{prodset_scale_table}
\alias{prodset_scale_table}
\title{Create Product Set Scale Table}
\usage{
prodset_scale_table(prodset_def, period = 2, tonic_note_number = 60)
}
\arguments{
\item{prodset_def}{the product set scale definition. This is a list of
numeric vector. Each vector is a multiset of any number of integers.
For example, the \code{prodset_def} of the 1-3-5-7 Hexany is

\code{list(c(1, 3), c(1, 5), c(1, 7), c(3, 5), c(3, 7), c(5, 7))}}

\item{period}{the period of the scale - default is 2.}

\item{tonic_note_number}{MIDI note number of the tonic for the scale -
\itemize{
\item default is middle C = 60
}}
}
\value{
a \code{data.table} with seven columns:
\itemize{
\item \code{ratio}: the ratio that defines the note, as a number between 1 and
\code{period}
\item \code{ratio_frac}: the ratio as a vulgar fraction (character). The ratios
for this type of scale are usually irrational, so this is an approximation,
computed by \code{fractional::fractional}.
\item \code{ratio_cents}: the ratio in cents (hundredths of a semitone)
\item \code{frequency}: frequency of the note given the \code{tonic_note_number}
parameter
\item \code{bent_midi}: the MIDI note number as an integer plus a fraction. For
example, middle C is MIDI note number 60 and middle C sharp is 61. The
quarter-tone half-way between C and C sharp would have a \code{bent_midi} value
of 60.5. The name \code{bent_midi} comes from the fact that a MIDI sequencer
can convert the value to a regular integer MIDI note number message and
a pitch bend message.
\item \code{interval_cents}: interval between this note and the previous note
\item \code{degree}: scale degree from zero to (number of notes) - 1
}
}
\description{
Creates a scale table from a product set definition
}
\examples{
(hexany <- prodset_scale_table(list(
  c(1, 3),
  c(1, 5),
  c(1, 7),
  c(3, 5),
  c(3, 7),
  c(5, 7)
)))

}
