% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scales.R
\name{sclfile_scale_table}
\alias{sclfile_scale_table}
\title{Create Scale Table From a Scala \code{.scl} File}
\usage{
sclfile_scale_table(sclfile_path, tonic_note_number = 60)
}
\arguments{
\item{sclfile_path}{The path to a valid Scala \code{.scl} file}

\item{tonic_note_number}{MIDI note number of the tonic for the scale -
\itemize{
\item default is middle C = 60
}}
}
\value{
a \code{data.table} with seven columns:
\itemize{
\item \code{ratio}: the ratio that defines the note, as a number between 1 and
\code{period}
\item \code{ratio_frac}: the ratio as a vulgar fraction (character). The ratios
for this type of scale are usually irrational, so this is an approximation,
computed by \code{fractional::fractional}.
\item \code{ratio_cents}: the ratio in cents (hundredths of a semitone)
\item \code{frequency}: frequency of the note given the \code{tonic_note_number}
parameter
\item \code{bent_midi}: the MIDI note number as an integer plus a fraction. For
example, middle C is MIDI note number 60 and middle C sharp is 61. The
quarter-tone half-way between C and C sharp would have a \code{bent_midi} value
of 60.5. The name \code{bent_midi} comes from the fact that a MIDI sequencer
can convert the value to a regular integer MIDI note number message and
a pitch bend message.
\item \code{interval_cents}: interval between this note and the previous note
\item \code{degree}: scale degree from zero to (number of notes) - 1
}
}
\description{
Creates a scale table from a given \code{.scl} file
}
\examples{

# a file with ratios specified in cents
cents <- sclfile_scale_table(system.file(
  "test_scl_files/carlos_alpha.scl",
  package = "consonaR"
))
if (cents$status == "Oll Korrect") {
  print(cents$scale_table)
} else {
  print(cents$status)
}

# a file with ratios specified as vulgar fractions
ratios <- sclfile_scale_table(system.file(
  "test_scl_files/carlos_harm.scl",
  package = "consonaR"
))
if (ratios$status == "Oll Korrect") {
  print(ratios$scale_table)
} else {
  print(ratios$status)
}

# a file that doesn't exist
nosuch <- sclfile_scale_table(system.file(
  "carlo_scl_iles/carlos_harm.scl",
  package = "consonaR"
))
if (nosuch$status == "Oll Korrect") {
  print(nosuch$scale_table)
} else {
  print(nosuch$status)
}

}
